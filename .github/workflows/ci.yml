name: BuildCraft Fabric CI

on:
  push:
    branches: ["**"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties','settings.gradle','gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # If the wrapper is missing OR the JAR is empty, bootstrap Gradle and regenerate wrapper
      - name: Bootstrap Gradle wrapper (if missing/broken)
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f gradlew ] || [ ! -s gradle/wrapper/gradle-wrapper.jar ]; then
            echo "Wrapper missing or broken; bootstrapping Gradle and regenerating wrapperâ€¦"
            GRADLE_VER=8.7
            curl -sL "https://services.gradle.org/distributions/gradle-${GRADLE_VER}-bin.zip" -o gradle.zip
            unzip -q gradle.zip -d "$RUNNER_TEMP/gradle"
            export GRADLE_HOME="$RUNNER_TEMP/gradle/gradle-${GRADLE_VER}"
            export PATH="$GRADLE_HOME/bin:$PATH"
            gradle --version
            gradle wrapper --gradle-version "${GRADLE_VER}"
            chmod +x gradlew
          else
            echo "Wrapper looks present and non-empty."
            ls -l gradlew gradle/wrapper/gradle-wrapper.jar || true
          fi

      - name: Build (clean -> build -> remapJar)
        shell: bash
        env:
          JAVA_TOOL_OPTIONS: ""
          GRADLE_OPTS: "-Djava.net.preferIPv4Stack=true -Dhttps.protocols=TLSv1.2,TLSv1.3"
        run: |
          set -euo pipefail
          ./gradlew --refresh-dependencies clean build remapJar -S --no-daemon

      - name: List jars
        shell: bash
        run: |
          echo "Built jars:"
          find . -type f -path "*/build/libs/*.jar" -print | sort

      - name: Upload jars
        uses: actions/upload-artifact@v4
        with:
          name: buildcraft-fabric-jars
          path: "**/build/libs/*.jar"
          if-no-files-found: error
