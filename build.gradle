plugins {
  id 'fabric-loom' version '1.6.12'
  id 'maven-publish'
}

group = project.group
version = project.mod_version

base {
  archivesName = project.archives_base_name
}

repositories {
  mavenCentral()
  maven { url = 'https://maven.fabricmc.net/' }
  maven { url = 'https://maven.terraformersmc.com/releases/' }
  maven { url = 'https://maven.quiltmc.org/repository/release/' }
  maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
  // MC + mappings + loader
  minecraft "com.mojang:minecraft:${minecraft_version}"
  mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${loader_version}"

  // Fabric API (umbrella)
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
}

loom {
  splitEnvironmentSourceSets()

  runs {
    client {
      client()
      ideConfigGenerated(true)
      runDir("run/client")
    }
    server {
      server()
      ideConfigGenerated(true)
      runDir("run/server")
    }
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(project.java_version as int)
  }
  withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
  options.release = project.java_version as int
  options.encoding = "UTF-8"
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.archives_base_name}" }
  }
}

// Make the standard build produce a remapped jar too (what you ship)
tasks.register("ciJar") {
  dependsOn("build", "remapJar")
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact(remapJar) {
        builtBy remapJar
      }
      artifact(sourcesJar)
      groupId = project.group
      artifactId = project.archives_base_name
      version = project.version
    }
  }
  repositories {
    maven {
      name = "localBuild"
      url = uri("${layout.buildDirectory.dir('repo')}")
    }
  }
}
