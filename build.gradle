plugins {
    id 'fabric-loom' version '1.6.12'
}

group = project.findProperty('maven_group') ?: 'net.mod.buildcraft'
version = project.findProperty('mod_version') ?: '0.1.0'
archivesBaseName = project.findProperty('archives_base_name') ?: 'buildcraft-fabric'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

repositories {
    // Keep the most reliable repos first
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url = 'https://maven.ladysnake.org/releases' }
    maven { url = 'https://maven.terraformersmc.com/releases/' }
    maven { url = 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
    def minecraftVersion = project.findProperty('minecraft_version') ?: '1.20.4'
    def yarnMappings    = project.findProperty('yarn_mappings') ?: '1.20.4+build.3:v2'
    def loaderVersion   = project.findProperty('loader_version') ?: '0.15.11'
    def fabricApi       = project.findProperty('fabric_api_version') ?: '0.97.8+1.20.4'

    minecraft "com.mojang:minecraft:${minecraftVersion}"
    mappings loom.yarn(yarnMappings)

    modImplementation "net.fabricmc:fabric-loader:${loaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabricApi}"

    // Mixin Extras (helps with modern mixin helpers). On Maven Central/Sponge.
    include(modImplementation("io.github.llamalad7:mixinextras-fabric:0.3.5"))
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 17
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") { rename { "${it}_${archivesBaseName}" } }
}

# Make the standard 'build' also produce a remapped jar (so CI always has a mod jar).
tasks.register("ciBuild") {
    dependsOn("clean", "build", "remapJar")
}
