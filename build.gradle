plugins {
  id 'fabric-loom' version '1.6.+'
  id 'maven-publish'
}

group = project.findProperty('group') ?: 'net.mod.buildcraft'
version = project.findProperty('version') ?: '0.1.0'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(project.findProperty('java_version') ?: '17')
  }
  withSourcesJar()
}

repositories {
  // PREFER_PROJECT in settings makes these win over global settings
  maven { url = 'https://maven.fabricmc.net/' }
  mavenCentral()
  maven { url = 'https://maven.quiltmc.org/repository/release/' }
  maven { url = 'https://maven.terraformersmc.com/releases/' }
  maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
  minecraft "com.mojang:minecraft:${minecraft_version}"
  mappings "net.fabricmc:yarn:${yarn_mappings}:v2"

  modImplementation "net.fabricmc:fabric-loader:${loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

  // If you use annotations:
  compileOnly annotationProcessor("com.google.code.findbugs:jsr305:3.0.2")
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.release = 17
}

loom {
  // add loom config here if you use access wideners, split env sources, etc.
  // e.g.: accessWidenerPath = file("src/main/resources/yourmod.accesswidener")
}

jar {
  from("LICENSE") { rename { "${it}_${project.name}" } }
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version,
      'Built-By': 'CI'
    )
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact(remapJar) // loom adds remapJar
      artifact(sourcesJar)
      groupId = project.group
      artifactId = (project.findProperty('archivesBaseName') ?: 'buildcraft-fabric')
      version = project.version
    }
  }
  repositories {
    // add your repo target if you publish
  }
}
