plugins {
    id 'fabric-loom' version '1.6.+'
    id 'maven-publish'
}

base {
    // replaces the old: archivesBaseName = 'buildcraft-fabric'
    archivesName = 'buildcraft-fabric'
}

group = "net.mod.buildcraft"
version = "0.1.0+1.20.4"
archivesBaseName = "buildcraft-fabric"

tasks.named("build") {
    dependsOn("remapJar") // make sure release jar is produced on build
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}
tasks.named("build") {
    dependsOn("remapJar")
}

repositories {
    mavenCentral()
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://maven.quiltmc.org/repository/release/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
}
}

dependencies {
    minecraft "com.mojang:minecraft:1.20.4"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:0.15.6"
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.95.1+1.20.4"
}

loom {
    // If you use an access widener, keep this:
    accessWidenerPath = file("src/main/resources/buildcraft.accesswidener")

    // Use this if you keep a refmap; DO NOT set any legacy “remap type” here
    // mixin {
    //     defaultRefmapName = "buildcraft.refmap.json"
    // }
}

// Optional: tidy jar manifest
tasks.withType(Jar).configureEach {
    from("LICENSE") { rename { "${it}_${project.base.archivesName.get()}" } }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.base.archivesName.get()
            version = project.version
        }
    }
    repositories {
        // add your maven target here if you publish
        // mavenLocal()
    }
}
